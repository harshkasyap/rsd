{"version":3,"file":"static/webpack/static/development/pages/index.js.9a685732140e13f181a2.hot-update.js","sources":["webpack:///./components/timer.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\n\nclass Countdown extends React.Component {\n\tstate = {\n\t\tdays: undefined,\n\t\thours: undefined,\n\t\tminutes: undefined,\n\t\tseconds: undefined\n\t}\n\t\n\tcomponentDidMount() {\n\t\tthis.interval = setInterval(() => {\n\t\t\tconst { timeTillDate, timeFormat } = this.props;\n\t\t\tconst then = moment(timeTillDate, timeFormat);\n\t\t\tconst now = moment();\n\t\t\tconst countdown = moment(then - now);\n\t\t\tconst days = countdown.format('D');\n\t\t\tconst hours = countdown.format('HH');\n\t\t\tconst minutes = countdown.format('mm');\n\t\t\tconst seconds = countdown.format('ss');\n\n\t\t\tthis.setState({ days, hours, minutes, seconds });\n\t\t}, 1000);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tif(this.interval) {\n\t\t\tclearInterval(this.interval);\n\t\t}\n\t}\n\t\n\trender() {\n\t\tconst { days, hours, minutes, seconds } = this.state;\n\t\tconst daysRadius = mapNumber(days, 30, 0, 0, 360);\n\t\tconst hoursRadius = mapNumber(hours, 24, 0, 0, 360);\n\t\tconst minutesRadius = mapNumber(minutes, 60, 0, 0, 360);\n\t\tconst secondsRadius = mapNumber(seconds, 60, 0, 0, 360);\n\n\t\tif(!seconds) {\n\t\t\treturn null;\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<div>\n                <style jsx>{ `\n                    body {\n                        background-image: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n                        \n                        align-items: center;\n                        justify-content: center;\n                        flex-direction: column;\n\n                        min-height: 100vh;\n                        font-family: 'Lato', sans-serif;\n                        margin: 0;\n                    }\n\n                    h1 {\n                        letter-spacing: 2px;\n                        text-align: center;\n                        text-transform: uppercase;\n                    }\n\n                    .countdown-wrapper {\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        flex-wrap: wrap;\n                    }\n\n                    .countdown-item {\n                        color: #111;\n                        font-size: 40px;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        flex-direction: column;\n                        line-height: 30px;\n                        margin: 10px;\n                        padding-top: 10px;\n                        position: relative;\n                        width: 100px;\n                        height: 100px;\n                    }\n\n                    .countdown-item span {\n                        color: #333;\n                        font-size: 12px;\n                        font-weight: 600;\n                        text-transform: uppercase;\n                    }\n\n                    .countdown-svg {\n                        position: absolute;\n                        top: 0;\n                        left: 0;\n                        width: 100px;\n                        height: 100px;\n                    }\n\n                    footer {\n                        background-color: #222;\n                        color: #fff;\n                        font-size: 14px;\n                        bottom: 0;\n                        position: fixed;\n                        left: 0;\n                        right: 0;\n                        text-align: center;\n                        z-index: 999;\n                    }\n                ` }</style>\n\t\t\t\t<div className='countdown-wrapper'>\n\t\t\t\t\t{days && (\n\t\t\t\t\t\t<div className='countdown-item'>\n\t\t\t\t\t\t\t<SVGCircle radius={daysRadius} />\n\t\t\t\t\t\t\t{days} \n\t\t\t\t\t\t\t<span>days</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{hours && (\n\t\t\t\t\t\t<div className='countdown-item'>\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<SVGCircle radius={hoursRadius} />\n\t\t\t\t\t\t\t{hours} \n\t\t\t\t\t\t\t<span>hours</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{minutes && (\n\t\t\t\t\t\t<div className='countdown-item'>\n\t\t\t\t\t\t\t<SVGCircle radius={minutesRadius} />\n\t\t\t\t\t\t\t{minutes} \n\t\t\t\t\t\t\t<span>minutes</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t\t{seconds && (\n\t\t\t\t\t\t<div className='countdown-item'>\n\t\t\t\t\t\t\t<SVGCircle radius={secondsRadius} />\n\t\t\t\t\t\t\t{seconds} \n\t\t\t\t\t\t\t<span>seconds</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nconst SVGCircle = ({ radius }) => (\n\t<svg className='countdown-svg'>\n\t\t<path fill=\"none\" stroke=\"#333\" stroke-width=\"4\" d={describeArc(50, 50, 48, 0, radius)}/>\n\t</svg>\n);\n\n// From stackoverflow: https://stackoverflow.com/questions/5736398/how-to-calculate-the-svg-path-for-an-arc-of-a-circle\nfunction polarToCartesian(centerX, centerY, radius, angleInDegrees) {\n  var angleInRadians = (angleInDegrees-90) * Math.PI / 180.0;\n\n  return {\n    x: centerX + (radius * Math.cos(angleInRadians)),\n    y: centerY + (radius * Math.sin(angleInRadians))\n  };\n}\n\nfunction describeArc(x, y, radius, startAngle, endAngle){\n\n    var start = polarToCartesian(x, y, radius, endAngle);\n    var end = polarToCartesian(x, y, radius, startAngle);\n\n    var largeArcFlag = endAngle - startAngle <= 180 ? \"0\" : \"1\";\n\n    var d = [\n        \"M\", start.x, start.y, \n        \"A\", radius, radius, 0, largeArcFlag, 0, end.x, end.y\n    ].join(\" \");\n\n    return d;       \n}\n\n// Stackoverflow: https://stackoverflow.com/questions/10756313/javascript-jquery-map-a-range-of-numbers-to-another-range-of-numbers\nfunction mapNumber(number, in_min, in_max, out_min, out_max) {\n  return (number - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\n}\n\nconst Timer = ( ) => (\n    <div>\n        <Countdown timeTillDate=\"03 31 2020, 6:00 am\" timeFormat=\"MM DD YYYY, h:mm a\" />\n    </div>\n);\n\nexport default Timer;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;;;;;;AAMA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAoEA;AAAA;AAEA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAMA;AAAA;AACA;AAAA;AAQA;;;;AA9IA;AACA;AAgJA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAFA;AACA;AACA;AAKA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAFA;AACA;AAKA;;;;A","sourceRoot":""}